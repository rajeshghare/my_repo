trigger updateContactCountOnAccount on Contact (after insert, after update, after delete, after undelete) {

Set<Id> AccountIds = new Set<Id>();
 // hello sachin

if(!Trigger.isDelete){
    for (Contact ct : Trigger.new) {        

        if(Trigger.isInsert && ct.AccountId != null){
            AccountIds.add(ct.AccountId);
        }
 //For Contact Update scenarios, Contact.AccountId value should be checked for null in new and old record.
        if(Trigger.isUpdate){
            if(ct.AccountId==null && Trigger.oldMap.get(ct.Id).AccountId != null){
                AccountIds.add(Trigger.oldMap.get(ct.Id).AccountId);
            }
            if(ct.AccountId!=null && Trigger.oldMap.get(ct.Id).AccountId != null && ct.AccountId != Trigger.oldMap.get(ct.Id).AccountId){
                AccountIds.add(ct.AccountId);
                AccountIds.add(Trigger.oldMap.get(ct.Id).AccountId);
            }
            if(ct.AccountId!=null && Trigger.oldMap.get(ct.Id).AccountId == null){
                AccountIds.add(ct.AccountId);
            }
        }

        if(Trigger.isUndelete && ct.AccountId != null){
            AccountIds.add(ct.AccountId);
        }
    }
}else{
    for (Contact ct : Trigger.old){
        if(Trigger.isDelete && ct.AccountId != null){
            AccountIds.add(ct.AccountId);
        }
    }   
}

List<Account> AcctToUpdate = new List<Account>();
//AggregateResult to get count of Contact for each Account
for (AggregateResult ar: [Select Count(Id) ContactCount, AccountId from Contact where AccountId IN: AccountIds GROUP BY AccountId]){
    Account tmp = new Account(Id=(Id)ar.get('AccountId'), NumberContacts__c=(Decimal)ar.get('ContactCount'));
    AcctToUpdate.add(tmp);
}
if(AcctToUpdate.size()>0) update AcctToUpdate;
 }